import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import org.joda.time.*
import java.lang.Math


var String step = ""


rule "Example Rule at sunset"
when
    Item Sunset_Event received update ON
then
    sendCommand(Aussenlicht, ON)
    logInfo("Example Rule at sunset","ON")
end


rule "Example Rule at sunrise"
when
    Item Sunrise_Event received update ON
then
    sendCommand(Aussenlicht, OFF)
	logInfo("Example Rule at sunrise","OFF")
end






rule "Betriebszustand (Schaltstufe) der KWL ermitteln"
when
	Time cron "0 0/1 * * * ?" or
	System started
then
	step = executeCommandLine("ssh pi@heizung sudo python /home/pi/from_git/heizung/get_KWL.py", 20000)
	sendCommand(KWL, step)
	
end





rule "Betriebsart Wohnrauml√ºftung umschalten"
when
  Item KWL received command or
  System started
then
  if (receivedCommand == 0) {
    executeCommandLine("ssh pi@heizung sudo python /home/pi/from_git/heizung/set_KWL.py 0")
  }
  else if (receivedCommand == 1) {
    executeCommandLine("ssh pi@heizung sudo python /home/pi/from_git/heizung/set_KWL.py 1")
  }
  else if (receivedCommand == 2) {
    executeCommandLine('ssh pi@heizung sudo python /home/pi/from_git/heizung/set_KWL.py 2')
  }
  else if (receivedCommand == 3) {
    executeCommandLine('ssh pi@heizung sudo python /home/pi/from_git/heizung/set_KWL.py 3')
  }
end


